version: "3.8"
services:
  redis:
    image: redis
    command: redis-server --save 20 1 --loglevel warning
    expose:
      - 6379
    healthcheck:
      test: [ "CMD", "nc", "-z", "redis", "6379" ]
      interval: 5s
      timeout: 15s
      retries: 1
    restart: on-failure
    networks:
      default:
        aliases:
          - redis
    volumes:
      - redis:/data
  rabbitmq:
    image: rabbitmq
    command: rabbitmq-server
    hostname: rabbitmq
    expose:
      - 5672
      - 15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit consumer_timeout 3600000000
    healthcheck:
      test: [ "CMD", "nc", "-z", "rabbitmq", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    restart: on-failure
    networks:
      default:
        aliases:
          - rabbitmq
  qdrant:
    image: qdrant/qdrant
    environment:
      - QDRANT__DEBUG=1
      - QDRANT__SERVICE__HOST=0.0.0.0
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    restart: on-failure
    networks:
      default:
        aliases:
          - qdrant
  llama-base: # this one is here just to ensure that the base image is created
    build: ./llama-base
    image: aithena-llama-base
    volumes:
      - "../open_llama_7b/:/llama/models/7B/"
  llama-embeddings:
    build: ./embeddings
    ports:
      - "5000:5000"    
    volumes:
      - "../open_llama_7b/:/llama/models/7B/"
    depends_on:
      - llama-base
    restart: on-failure
    # deploy:
    #   resources:
    #     reservations:
    #       cpus: "6"
    networks:
      default:
        aliases:
          - llama-embeddings
  document-lister:
    build: ./document-lister
    environment:
      - RABBITMQ_HOST=rabbitmq
      - REDIS_HOST=redis
      - STORAGE_ACCOUNT_NAME=biblaisourcedocs
      - STORAGE_CONTAINER=test-library
    depends_on:
      - rabbitmq
      - redis
    restart: on-failure
    networks:
      - default
    volumes:
      - type: volume
        source: fdm
        target: /documents
        read_only: true
  document-indexer:
    build: ./document-indexer
    environment:
      - RABBITMQ_HOST=rabbitmq
      - EMBEDDINGS_HOST=llama-embeddings
      - QDRANT_HOST=qdrant
      - STORAGE_ACCOUNT_NAME=biblaisourcedocs
      - STORAGE_CONTAINER=test-library
    restart: on-failure
    depends_on:
      - rabbitmq
    networks:
      - default
    volumes:
      - "fdm:/documents"
volumes:
  rabbitmq-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/source/volumes/rabbitmq-data'
  qdrant-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/source/volumes/qdrant-data'
  redis:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/source/volumes/redis'
  fdm:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/azureuser/fdm'
networks:
  default: